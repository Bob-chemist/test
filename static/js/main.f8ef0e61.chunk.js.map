{"version":3,"sources":["containers/Auth/Auth.module.sass","containers/News/News.module.sass","components/Content/Content.module.sass","components/UI/Button/Button.module.sass","components/UI/Input/Input.module.sass","containers/Main/Main.module.sass","containers/Profile/Profile.module.sass","hoc/Layout/Layout.module.sass","components/Navigation/Navigation.module.sass","components/Content/Content.js","containers/News/News.js","components/UI/Button/Button.js","components/UI/Input/Input.js","containers/Auth/Auth.js","containers/Main/Main.js","containers/Profile/Profile.js","components/Navigation/Navigation.js","hoc/Layout/Layout.js","containers/NotFound/NotFound.js","App.js","serviceWorker.js","redux/login.js","redux/news.js","redux/main.js","redux/rootReducer.js","index.js"],"names":["module","exports","Auth","Error","News","Content","Button","Input","Main","Profile","Layout","Navigation","props","react_default","a","createElement","className","classes","title","text","this","news","map","article","index","components_Content_Content","key","renderContent","Component","connect","state","onClick","children","inputType","type","cls","htmlFor","concat","Math","random","join","label","id","value","onChange","autoComplete","autocomplete","formControls","login","password","errorMessage","submitHandler","event","preventDefault","loginHandler","authData","_this","setState","controlName","Object","objectSpread","control","target","_this2","keys","field","UI_Input_Input","onChangeHandler","onSubmit","AuthForm","renderInput","UI_Button_Button","dispatch","main","links","to","exact","link","NavLink","renderLinks","React","components_Navigation_Navigation","NotFound","App","Layout_Layout","Switch","Route","path","component","render","loggedIn","Redirect","containers_Auth_Auth","Profile_Profile","withRouter","Boolean","window","location","hostname","match","initialState","combineReducers","arguments","length","undefined","store","createStore","rootReducer","app","es","BrowserRouter","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f8ef0e61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3MLmN\",\"Error\":\"Auth_Error__16NlV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"News\":\"News_News__1sspS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Content_Content__3IeW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1WFL2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2hT4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__1LPmx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__7TZW8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__22sQx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__2HOZP\"};","import React from 'react'\r\nimport classes from './Content.module.sass'\r\n\r\nconst Content = props => {  \r\n  return (\r\n    <div className={classes.Content}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.text}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Content\r\n","import React, { Component } from 'react';\r\nimport classes from './News.module.sass';\r\nimport Content from '../../components/Content/Content';\r\nimport {connect} from 'react-redux';\r\n\r\nclass News extends Component {\r\n  \r\n  renderContent() {\r\n    return this.props.news.map((article, index) => {      \r\n      return (\r\n        <Content \r\n          key={index}\r\n          title={article.title}\r\n          text={article.text}\r\n        />\r\n      )\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className={classes.News}>\r\n        <h1>News</h1>\r\n        {this.renderContent()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {  \r\n  return {\r\n    news: state.news.news\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(News);","import React from 'react'\r\nimport classes from './Button.module.sass'\r\n\r\nconst Button = props => {\r\n  return (\r\n    <button\r\n      className={classes.Button}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react';\r\nimport classes from './Input.module.sass'\r\n\r\nconst Input = props => {\r\n\r\n  const inputType = props.type || 'text';\r\n  const cls = [classes.Input];\r\n  const htmlFor = `${inputType}-${Math.random()}`;\r\n\r\n  return (\r\n    <div className={cls.join(' ')}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <input \r\n        type={inputType}\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        autoComplete={props.autocomplete}\r\n      />\r\n\r\n      {/* {\r\n        isInvalid(props) ? <span>{props.errorMessage || \"Enter proper values\"}</span>\r\n        : null\r\n      }       */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from 'react';\r\nimport classes from './Auth.module.sass';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nclass Auth extends Component {\r\n\r\n  state = {\r\n    formControls: {\r\n      login: {\r\n        value: '',\r\n        type: 'text',\r\n        autocomplete: 'username',\r\n        label: 'Login',\r\n      },\r\n      password: {\r\n        value: '',\r\n        type: 'password',\r\n        autocomplete: 'current-password',\r\n        label: 'Password',        \r\n      },\r\n    },\r\n    login: 'Admin',\r\n    password: '12345',    \r\n    errorMessage: '',\r\n  }\r\n\r\n  onChangeHandler(event, controlName) {\r\n    const formControls = {...this.state.formControls};\r\n    const control = {...formControls[controlName]};\r\n\r\n    control.value = event.target.value;   \r\n\r\n    formControls[controlName] = control;\r\n    \r\n    this.setState({\r\n      formControls,\r\n      errorMessage: '',   \r\n    });\r\n  }\r\n  \r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n  }\r\n\r\n  loginHandler = () => {\r\n    const authData = {\r\n      login: this.state.formControls.login.value,\r\n      password: this.state.formControls.password.value,\r\n    }  \r\n    \r\n    if (authData.login === this.state.login && authData.password === this.state.password) {\r\n      return this.props.login();\r\n    }\r\n    this.setState({\r\n      errorMessage: 'Имя пользователя или пароль введены не верно',\r\n    });\r\n     \r\n  }\r\n\r\n  renderInput() {\r\n    return Object.keys(this.state.formControls).map((control, index) => {\r\n      const field = this.state.formControls[control];\r\n      return (\r\n        <Input\r\n          key={index}\r\n          value={field.value}\r\n          type={field.type}\r\n          autocomplete={field.autocomplete}\r\n          label={field.label}\r\n          onChange={event => this.onChangeHandler(event, control)}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Auth}>\r\n        <div>\r\n          <h1>Login, please</h1>\r\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n            {this.renderInput()}\r\n            \r\n            <span className={classes.Error}>{this.state.errorMessage}</span><br/>\r\n            <Button\r\n              onClick={this.loginHandler}\r\n            >\r\n              Login\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    login: () => dispatch({type: 'LOGIN'})\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)","import React, { Component } from 'react';\r\nimport classes from './Main.module.sass';\r\nimport {connect} from 'react-redux'\r\nimport Content from '../../components/Content/Content';\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.Main}>\r\n        <h1>Main Page</h1>\r\n        <Content \r\n          text={this.props.main}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {  \r\n  return {\r\n    main: state.main.main\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);","import React, { Component } from 'react';\r\nimport classes from './Profile.module.sass'\r\n\r\nexport default class Profile extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.Profile}>\r\n        <h1>Profile page</h1>\r\n        Username: Admin <br/>\r\n        Password: 12345\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport classes from './Navigation.module.sass';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst links = [\r\n  {to: '/', label: 'Main', exact: true,},\r\n  {to: '/profile', label: 'Profile', exact: false,},\r\n  {to: '/news', label: 'News', exact: false,}, \r\n];\r\n\r\nclass Navigation extends React.Component {\r\n  \r\n  \r\n  renderLinks() {\r\n    return links.map((link, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <NavLink\r\n            to={link.to}\r\n            exact={link.exact}                   \r\n          >\r\n            {link.label}\r\n          </NavLink>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <header className={classes.Navigation}>\r\n        <nav>\r\n          <ul>\r\n            {this.renderLinks()}\r\n          </ul>\r\n        </nav>        \r\n      </header>      \r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default Navigation\r\n","import React, { Component } from 'react';\r\nimport classes from './Layout.module.sass'\r\nimport Navigation from '../../components/Navigation/Navigation';\r\n\r\nexport default class Layout extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.Layout}>\r\n        <Navigation />\r\n\r\n        <main>\r\n          { this.props.children }\r\n        </main>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Ooooppss, seems to be a problem!</h1>\r\n        <h2>Try another URL</h2>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport {Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport News from './containers/News/News';\nimport Auth from './containers/Auth/Auth';\nimport Main from './containers/Main/Main';\nimport Profile from './containers/Profile/Profile'\nimport Layout from './hoc/Layout/Layout';\nimport {connect} from 'react-redux';\nimport NotFound from './containers/NotFound/NotFound'\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Layout>\n        <Switch>          \n          <Route path={'/news'} component={News}/>\n          <Route \n            path={'/login'} \n            render={ () => ( \n              !this.props.loggedIn ? (<Auth/>) : (<Redirect to={'/profile'}/>)\n              ) \n            }\n          />\n          \n          <Route \n            path={'/profile'} \n            render={ () => ( \n              this.props.loggedIn ? (<Profile/>) : (<Redirect to={'/login'}/>)\n              ) \n            }\n          />\n          <Route path={'/'} exact component={Main}/>\n          <Route component={NotFound}/>\n        </Switch>\n      </Layout>      \n    );\n  }\n}\n\nfunction mapStateToProps(state) {  \n  return {\n    loggedIn: state.login.loggedIn\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  loggedIn: false,   \r\n}\r\n\r\nexport default function login(state = initialState, action) {\r\n  \r\n  switch (action.type) {\r\n    case 'LOGIN':         \r\n      return {loggedIn: true};\r\n  \r\n    default:\r\n      return state;\r\n  } \r\n}","const initialState = {  \r\n  news: [\r\n    {\r\n      title: 'Книги: Н. Стивенсон. Анафем',\r\n      text: 'Мы тут в течение месяца читали научно-фантастическую книгу некоего Нила Стивенсона под названием «Анафем». Так как книга претендует на раскрытие темы науки и философии, мы взяли на себя смелость написать кое-какие впечатления от сего произведения.',\r\n    },\r\n    {\r\n      title: 'Модель Вселенной',\r\n      text: 'Пару лет назад какой-то мужик из этих ихних лабораторий запилил на суперкомпьютере модель развития Вселенной на основании имеющихся у нас на сегодня данных. Ну то есть он взял параметры Большого Взрыва и смоделировал развитие вселенной по известным формулам и теориям. Это была довольно точная и обширная модель - гигантские расчеты проводились в кубе с поперечником в 350 млн. световых лет. В итоге получилась симпатичная Вселенная, очень даже похожая на реальную. ',\r\n    },\r\n  ], \r\n}\r\n\r\nexport default function news(state = initialState, action) {\r\n    return state;\r\n}","const initialState = {  \r\n  main: 'Мы тут в течение месяца читали научно-фантастическую книгу некоего Нила Стивенсона под названием «Анафем». Так как книга претендует на раскрытие темы науки и философии, мы взяли на себя смелость написать кое-какие впечатления от сего произведения.',\r\n}\r\n\r\nexport default function main(state = initialState, action) {\r\n    return state;\r\n}","import {combineReducers} from 'redux';\r\nimport login from './login';\r\nimport news from './news';\r\nimport main from './main'\r\n\r\nexport default combineReducers({\r\n  login, news, main\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux'\nimport rootReducer from './redux/rootReducer';\n\n\nconst store = createStore(rootReducer);\n\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter> \n      <App />\n    </BrowserRouter>\n  </Provider>  \n)  \n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}